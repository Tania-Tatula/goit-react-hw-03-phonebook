{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Contacts/ContactForm.js","components/Contacts/Filter.js","components/Contacts/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","contacts","name","number","addList","contact","id","shortid","generate","setState","prevState","loginInputId","handleInputChange","evt","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","contactsBlock","this","formName","input","type","onChange","pattern","title","required","button","Component","Filter","ContactList","contactList","onDeleteContact","map","contactItem","onClick","buttonDelete","App","filter","formSubmitHandler","includes","alert","changeFilter","getVisibleContacts","filterLowerCase","toLowerCase","deleteContacts","contactId","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26b6462f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__1rzk9\",\"input\":\"Contacts_input__1pqzr\",\"button\":\"Contacts_button__1ctJ_\",\"buttonDelete\":\"Contacts_buttonDelete__1EIEv\",\"contactsBlock\":\"Contacts_contactsBlock__-YJF9\",\"contactItem\":\"Contacts_contactItem__3y8Nt\"};","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addList = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  loginInputId = shortid.generate();\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.contactsBlock}>\r\n        <form onSubmit={this.handleSubmit} className={styles.formName}>\r\n          <label id={this.loginInputId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type='text'\r\n              name='name'\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label id={this.loginInputId}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type='tel'\r\n              name='number'\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n              pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n              title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type='submit'>\r\n            Add conract\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.contactsBlock}>\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n  <>\r\n    <ul className={styles.contactsBlock}>\r\n      {contactList.map(({ name, number, id }) => (\r\n        <li className={styles.contactItem}>\r\n          {name}: {number}{\" \"}\r\n          <button\r\n            onClick={() => onDeleteContact(id)}\r\n            className={styles.buttonDelete}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/Contacts/ContactForm\";\nimport Filter from \"./components/Contacts/Filter\";\nimport ContactList from \"./components/Contacts/ContactList\";\n\nimport styles from \"./components/Contacts/Contacts.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  \n  formSubmitHandler = (contact) => {\n    const { contacts } = this.state;\n    const names = contacts.map((contact) => contact.name);\n    names.includes(contact.name)\n      ? alert(`${contact.name} is already in contacts.`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  changeFilter = (evt) => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const filterLowerCase = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterLowerCase)\n    );\n  };\n\n  deleteContacts = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contactList={this.getVisibleContacts()}\n          onDeleteContact={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}